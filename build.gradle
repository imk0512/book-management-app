plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'nu.studer.jooq' version '8.1'
    id 'org.flywaydb.flyway' version '9.22.0'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jooq {
    version.set('3.19.0')
    edition.set(nu.studer.gradle.jooq.JooqEdition.OSS)

    configurations {
        main {  // ここに記述します
            generateSchemaSourceOnCompilation.set(true)
            generationTool {
                logging = 'WARN'
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5002/book_mng'
                    user = 'book_mng'
                    password = 'or3626'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                    database {
                        inputSchema = 'public'
                    }
                    target {
                        packageName = 'com.test.jooq'
                        directory = 'src/main/java'
                    }
                }
            }
        }
    }
}


flyway {
    url = 'jdbc:postgresql://localhost:5002/book_mng'
    user = 'book_mng'
    password = 'or3626'
    schemas = ['public']
    locations = ['classpath:db/migration']
}



repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    jooqGenerator 'org.postgresql:postgresql:42.5.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
