/*
 * This file is generated by jOOQ.
 */
package com.test.jooq.tables.records;


import com.test.jooq.tables.Authors;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorsRecord extends UpdatableRecordImpl<AuthorsRecord> implements Record6<Long, String, LocalDate, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.authors.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.authors.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.authors.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.authors.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.authors.birthdate</code>.
     */
    public void setBirthdate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.authors.birthdate</code>.
     */
    public LocalDate getBirthdate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.authors.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.authors.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.authors.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.authors.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.authors.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.authors.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, LocalDate, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, LocalDate, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Authors.AUTHORS.ID;
    }

    @Override
    public Field<String> field2() {
        return Authors.AUTHORS.NAME;
    }

    @Override
    public Field<LocalDate> field3() {
        return Authors.AUTHORS.BIRTHDATE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Authors.AUTHORS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Authors.AUTHORS.UPDATED_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Authors.AUTHORS.DELETED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDate component3() {
        return getBirthdate();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime component6() {
        return getDeletedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDate value3() {
        return getBirthdate();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public LocalDateTime value6() {
        return getDeletedAt();
    }

    @Override
    public AuthorsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuthorsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AuthorsRecord value3(LocalDate value) {
        setBirthdate(value);
        return this;
    }

    @Override
    public AuthorsRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AuthorsRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public AuthorsRecord value6(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public AuthorsRecord values(Long value1, String value2, LocalDate value3, LocalDateTime value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorsRecord
     */
    public AuthorsRecord() {
        super(Authors.AUTHORS);
    }

    /**
     * Create a detached, initialised AuthorsRecord
     */
    public AuthorsRecord(Long id, String name, LocalDate birthdate, LocalDateTime createdAt, LocalDateTime updatedAt, LocalDateTime deletedAt) {
        super(Authors.AUTHORS);

        setId(id);
        setName(name);
        setBirthdate(birthdate);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
        resetChangedOnNotNull();
    }
}
